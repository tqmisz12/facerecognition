{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshhd/Desktop/S23_SmartBrain_Front/facerecognitionbrain/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\nimport Signup from \"./components/Signup/Signup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: \"3d75ca34d0c44c5f9343d6f8cd4ee0ee\"\n});\nconst particlesOptions = {\n  polygon: {\n    enable: true,\n    type: \"inside\",\n    move: {\n      radius: 10\n    }\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": \"{YOUR_USER_ID}\",\n          \"app_id\": \"{YOUR_APP_ID}\"\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": this.state.input\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': '3d75ca34d0c44c5f9343d6f8cd4ee0ee'\n        },\n        body: raw\n      }; // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n      // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n      // this will default to the latest version_id\n\n      fetch(\"https://api.clarifai.com/v2/models/f76196b43bbd45c99b4f3cd8e8b40a8a/outputs\", requestOptions).then(response => {\n        console.log(\"123\");\n        console.log(response);\n\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err)); // app.models\n      //   .predict('f76196b43bbd45c99b4f3cd8e8b40a8a', this.state.input)\n      //   .then(response => {\n      //     console.log(\"123\")\n      //     console.log(response)\n      //     if (response) {\n      //       fetch('http://localhost:3000/image', {\n      //         method: 'put',\n      //         headers: { 'Content-Type': 'application/json' },\n      //         body: JSON.stringify({\n      //           id: this.state.user.id,\n      //         })\n      //       })\n      //         .then(response => response.json())\n      //         .then(count => {\n      //           this.setState(Object.assign(this.state.user, { entries: count }))\n      //         })\n      //     }\n      //     this.displayFaceBox(this.calculateFaceLocation(response))\n      //   })\n      //   .catch((err) => console.log(err));\n      // console.log(\"click\");\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"signout\") {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === \"home\") {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signin\",\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this) : route === \"signin\" ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Signup, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macintoshhd/Desktop/S23_SmartBrain_Front/facerecognitionbrain/src/App.js"],"names":["React","Navigation","Logo","ImageLinkForm","Rank","Particles","Clarifai","FaceRecognition","Signin","Signup","app","App","apiKey","particlesOptions","polygon","enable","type","move","radius","Component","constructor","loadUser","data","setState","user","id","name","email","password","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","console","log","json","count","Object","assign","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\nimport Signup from \"./components/Signup/Signup\";\n\nconst app = new Clarifai.App({\n  apiKey: \"3d75ca34d0c44c5f9343d6f8cd4ee0ee\",\n});\n\nconst particlesOptions = {\n  polygon: {\n    enable: true,\n    type: \"inside\",\n    move: {\n      radius: 10,\n    },\n  },\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signin\",\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        password: data.password,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  // componentDidMount() {\n  //   fetch('http://localhost:3000')\n  //     .then(response => response.json())\n  //     .then(console.log)\n  // }\n\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"{YOUR_USER_ID}\",\n        \"app_id\": \"{YOUR_APP_ID}\"\n      },\n      \"inputs\": [\n        {\n          \"data\": {\n            \"image\": {\n              \"url\": this.state.input\n            }\n          }\n        }\n      ]\n    });\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': '3d75ca34d0c44c5f9343d6f8cd4ee0ee'\n      },\n      body: raw\n    };\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(\"https://api.clarifai.com/v2/models/f76196b43bbd45c99b4f3cd8e8b40a8a/outputs\", requestOptions)\n      .then(response => {\n        console.log(\"123\")\n        console.log(response)\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }))\n            })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch((err) => console.log(err));\n\n    // app.models\n    //   .predict('f76196b43bbd45c99b4f3cd8e8b40a8a', this.state.input)\n    //   .then(response => {\n    //     console.log(\"123\")\n    //     console.log(response)\n    //     if (response) {\n    //       fetch('http://localhost:3000/image', {\n    //         method: 'put',\n    //         headers: { 'Content-Type': 'application/json' },\n    //         body: JSON.stringify({\n    //           id: this.state.user.id,\n    //         })\n    //       })\n    //         .then(response => response.json())\n    //         .then(count => {\n    //           this.setState(Object.assign(this.state.user, { entries: count }))\n    //         })\n    //     }\n    //     this.displayFaceBox(this.calculateFaceLocation(response))\n    //   })\n    //   .catch((err) => console.log(err));\n\n    // console.log(\"click\");\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState({ isSignedIn: false });\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  };\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === \"home\" ? (\n          <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n        ) : route === \"signin\" ? (\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <Signup loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}